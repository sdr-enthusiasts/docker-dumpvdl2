#!/command/with-contenv bash
#shellcheck shell=bash

# shellcheck disable=SC1091
source /scripts/common

set -e

VDLM_BIN="/usr/local/bin/dumpvdl2"
# shellcheck disable=SC2001
FREQ_STRING=""
VDLM_CMD=()


# Specify device ID
if [ -n "${SOAPYSDR}" ]; then
	VDLM_CMD+=("--soapysdr" "$SOAPYSDR")
    if [[ -n "$SOAPY_DEVICE_SETTINGS" ]]; then
        VDLM_CMD+=("--device-settings" "$SOAPY_DEVICE_SETTINGS")
    fi
elif [ -n "${SERIAL}" ]; then
	VDLM_CMD+=("--soapysdr" "driver=rtlsdr,serial=$SERIAL")
fi

if [ -n "$CENTER_FREQ" ]; then
    VDLM_CMD+=("--centerfreq" "$CENTER_FREQ")
fi

if [ -z "$GAIN" ]; then
    GAIN="40"
fi

if [ -n "$OVERSAMPLE" ]; then
    VDLM_CMD+=("--oversample" "$OVERSAMPLE")
fi

if [ -n "${PPM}" ]; then
	VDLM_CMD+=("--correction" "$PPM")
fi

VDLM_CMD+=("--gain" "$GAIN")

if [[ ${VDLM_FILTER_ENABLE,,} =~ true ]]; then
  VDLM_CMD+=("--msg-filter" "$VDLM_FILTER")
fi

# Send output JSON to vdlm2_server.
VDLM_CMD+=("--station-id=$FEED_ID" "--output" "decoded:json:zmq:mode=server,endpoint=tcp://0.0.0.0:5555")

if [[ -n "$ZMQ_MODE" ]]; then
  if [[ -n "$ZMQ_ENDPOINT" ]]; then
    VDLM_CMD+=("--output" "decoded:json:zmq:mode=${ZMQ_MODE,,},endpoint=${ZMQ_ENDPOINT}")
  fi
fi

if [[ -n "$STATSD_SERVER" ]]; then
  VDLM_CMD+=("--statsd" "$STATSD_SERVER")
fi

# shellcheck disable=SC2206
VDLM_CMD+=($FREQ_STRING)

# shellcheck disable=SC2154
"${s6wrap[@]}" echo "Starting: '$VDLM_BIN" "${VDLM_CMD[*]}'"

set -eo pipefail

if [[ ${QUIET_LOGS,,} =~ true ]]; then
# shellcheck disable=SC2016
  "${s6wrap[@]}"  "$VDLM_BIN" "${VDLM_CMD[@]}" 2>&1 | \
  stdbuf -oL sed --unbuffered '/^$/d' | \
  stdbuf -oL awk '! /^dumpvdl2/' | \
  stdbuf -oL awk '! /^Sampling rate set/' | \
  stdbuf -oL awk '! /^Found \[0-9]+ device(s):/' | \
  stdbuf -oL awk '! /^  [0-9]+/' | \
  stdbuf -oL awk '! /^Using device [0-9]+/' | \
  stdbuf -oL awk '! /^Found /' | \
  stdbuf -oL awk '! /^Exact sample rate /' | \
  stdbuf -oL awk '! /^Setting sample rate/' | \
  stdbuf -oL awk '! /PLL not locked!$/' | \
  stdbuf -oL awk '! /^Center frequency set/' | \
  stdbuf -oL awk '! /^Device [#]?[0-9]+/' | \
  stdbuf -oL awk '! /^Allocating [0-9]+ zero-copy buffers/' | \
  stdbuf -oL awk '{print $0}'
else
  # shellcheck disable=SC2016
  "${s6wrap[@]}" "$VDLM_BIN" "${VDLM_CMD[@]}"
fi

# if we've ended up here there is a problem!
"${s6wrap[@]}" echo "Exiting with error"
sleep 5
exit 1
